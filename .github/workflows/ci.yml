name: CI

on:
  push:
    branches: ["#5/github-actions"]
  pull_request:
    branches: ["#5/github-actions"]

jobs:
  QA:
    name: Quality Assurance
    runs-on: ubuntu-latest

    steps:
      # 저장소 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4

      # Gitleaks 검사
      - name: Run Gitleaks scan
        uses: zricethezav/gitleaks-action@v1
        with:
          scan_path: .          # 현재 디렉터리 전체 스캔
          redact: true          # 민감 정보 로그 마스킹
          fail_on_secrets: true # 시크릿 발견 시 CI 실패 처리

      # Python 환경 세팅
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # uv 설치
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      # Ruff 설치 (uv 기반)
      - name: Install Ruff with uv
        run: uv tool install ruff

      # Ruff 포매팅 검사
      - name: Run Ruff formatting check
        #run: uv run ruff format --diff .   먼저 실행 후 자동 포매팅(자동 포매팅 부분 확인 가능)
        run: uv run ruff format .

      # Ruff 린팅 검사
      - name: Run Ruff lint check
        run: uv run ruff check .

  Test:
    name: Run Pytest
    runs-on: ubuntu-latest
    needs: QA   # QA 잡이 성공해야 테스트 실행

    steps:
      # 저장소 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4

      # Python 환경 세팅
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # uv 설치 (선택 사항, 테스트에서 uv 필요 없다면 생략 가능)
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      # pytest 설치
      - name: Install pytest
        run: pip install pytest

      # 테스트 실행
      - name: Run tests
        run: pytest tests/ --maxfail=1 --disable-warnings -v